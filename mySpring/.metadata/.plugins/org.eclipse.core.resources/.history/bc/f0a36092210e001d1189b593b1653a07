package com.my.control;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.context.web.WebAppConfiguration;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.ResultActions;
import org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.web.context.WebApplicationContext;

@RunWith(SpringRunner.class)  //스프링 컨테이너구동 : ApplicationContext타입의 컨테이너
@ContextConfiguration(locations = 
	{"file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml"})
@WebAppConfiguration  //WebApplictionContext타입의 컨테이너
public class BoardControllerTest {
	@Autowired
	private WebApplicationContext context;
	
	private MockMvc mockMvc;  //컨트롤러 테스트용 모의객체
	
	@Before
	public void setup() {
		mockMvc = MockMvcBuilders.webAppContextSetup(context).build();
	}
	
	@Test
	public void testList() throws Exception {
		//게시글페이지별 목록 테스트
		String uri = "boardlist";
		MockHttpServletRequestBuilder  mockRequestBuilder =
				MockMvcRequestBuilders.get(uri).accept(org.springframework.http.MediaType.APPLICATION_JSON);
		mockRequestBuilder.param("currentPage", "1");
		//응답정보: ResultAction
		ResultActions resultActions = mockMvc.perform(mockRequestBuilder);//요청

	}

}
