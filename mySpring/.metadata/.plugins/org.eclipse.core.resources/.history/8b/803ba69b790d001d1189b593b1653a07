package com.my.repository;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

import java.util.List;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringRunner;

import com.my.dto.Board;
import com.my.exception.FindException;
import com.my.exception.ModifyException;

@RunWith(SpringRunner.class)
@ContextConfiguration(locations = {
"file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml"})
public class BoardRepositoryTest {
	@Autowired
	private BoardRepository repository;
	
	@Test
	public void testSelectByPage() throws FindException {
		int currentPage = 1;
		int cntPerPage = 3;
		int expectedSize = 3;
		int []expectedBoardNoArr = {3, 7, 1};
		List<Board> list = repository.selectByPage(currentPage, cntPerPage);
		assertNotNull(list);
		assertEquals(expectedSize, list.size());
		for(int i=0; i<list.size(); i++) { 
			assertEquals(expectedBoardNoArr[i], list.get(i).getBoardNo());
		}
	}
	
	@Test
	public void testSelectCount() throws FindException {
		int expectedCnt = 7;
		int cnt = repository.selectCount();
		assertEquals(expectedCnt, cnt);
		
		expectedCnt = 3;
		cnt = repository.selectCount("1번");
	}
	
	@Test
	public void testSelectByWord() throws FindException {
		int expectedSize = 3;
		String word = "1번";
		int currentPage = 1;
		int cntPerPage = 3;
		
		List<Board> list = repository.selectByWord(word, currentPage, cntPerPage);
		assertEquals(expectedSize, list.size());
	}
	
	@Test 
	public void testSelectByBoardNo() throws FindException{
		String expectedBoardTitle = "3번글";// 검색어"1번"의 총행수는 3행이다. 1페이지별 2건씩 보면서 2페이지의 행수를 예상
		String expectedBoardId = "id1";
		
		int boardNo = 3;
		Board board= repository.selectByBoardNo(boardNo);
		
		assertNotNull(board);
		assertEquals(expectedBoardTitle, board.getBoardTitle());
		assertEquals(expectedBoardId, board.getBoardId());
	}
	
	@Test
	public void testUpdate() throws ModifyException {
		//조회수 1증가 테스트
		int boardNo = 1; //1번 글
		
		Board b1 = repository.selectByBoardNo(boardNo);
		assertNotNull(b1);
		
		Board b = new Board();
		b.setBoardNo(boardNo);
		b.setBoardViewcount(-1);
		repository.update(b);
		
		Board b1 = repository.selectByBoardNo(boardNo);
		assertNotNull(b1);
		assertEquals();
	}
}
