package com.my.repository;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.config.ExecutorBeanDefinitionParser;
import org.springframework.stereotype.Repository;

import com.my.dto.Board;
import com.my.exception.AddException;
import com.my.exception.FindException;
import com.my.exception.ModifyException;
import com.my.exception.RemoveException;

@Repository
public class BoardOracleRepository implements BoardRepository {
	@Autowired
	private SqlSessionFactory sqlSessionFactory;

	@Override
	public List<Board> selectByPage(int currentPage, int cntPerPage) throws FindException {
		SqlSession session = null;
		try {
			session = sqlSessionFactory.openSession();
			//전달될 파라미터값이 하나가 아닌 두개(startRow,endRow)이므로
			//map형태로 만듬
			Map<String, Integer> map = new HashMap<>(); 
			
			//currentPage cntPerPage     startRow endRow
			//     1           3             1      3
			//     2           3             4      6
			//     3           3             7      9
			int endRow = currentPage * cntPerPage;
			int startRow = endRow - cntPerPage + 1;
			
			map.put("startRow", startRow);	//key는 mapper파일에 sql구문에 #startRow와 이름이 같아야됨 
			map.put("endRow", endRow);
			List<Board> list = 
					session.selectList("com.my.mapper.BoardMapper.selectByPage", map);  //여러행을 반환할거니 selectList를 이용
			// 한 행을 반환받을려고한다면 selectOne 이용
			if(list.size() == 0) {
				throw new FindException("게시글이 없습니다");
			}
			return list;
		}catch(Exception e) {
			throw new FindException(e.getMessage());
		}finally {
			if(session != null) {
				session.close();
			}
		}
	}
	
	@Override
	public int selectCount() throws FindException {
		SqlSession session = null;
		try {
			session = sqlSessionFactory.openSession();
			return session.selectOne("com.my.mapper.BoardMapper.selectCount");
		}catch(Exception e) {
			e.printStackTrace();
			throw new FindException();
		}finally {
			if(session != null) {
				session.close();
			}
		}
	}

	@Override
	public int selectCount(String word) throws FindException {
		SqlSession session = null;
		try {
			session = sqlSessionFactory.openSession();
			return session.selectOne("com.my.mapper.BoardMapper.selectCount2", word);
		}catch(Exception e) {
			e.printStackTrace();
			throw new FindException();
		}finally {
			if(session != null) {
				session.close();
			}
		}
	}

	@Override
	public List<Board> selectByWord(String word, int currentPage, int cntPerPage) throws FindException {
		SqlSession session = null;
		try {
			session = sqlSessionFactory.openSession();
			Map<String, Object> map = new HashMap<>();
			map.put("word", word);
			int endRow = currentPage * cntPerPage;
			int startRow = endRow - cntPerPage + 1;
			
			map.put("startRow", startRow);	
			map.put("endRow", endRow);
			List<Board> list = 
					session.selectList("com.my.mapper.BoardMapper.selectByWord", map);
			if(list.size() == 0) {
				throw new FindException("게시글이 없습니다");
			}
			return list;
		}catch(Exception e) {
			e.printStackTrace();
			throw new FindException(e.getMessage());
		}finally {
			if(session != null) {
				session.close();
			}
		}
	}

	@Override
	public Board selectByBoardNo(int boardNo) throws FindException {
		SqlSession session = null;
		try {
			session = sqlSessionFactory.openSession();
			session.selectOne("com.my.mapper.BoardMapper.selectByBoardNo", boardNo);
		}catch(Exception e) {
			e.printStackTrace();
			throw new FindException("게시글이 없습니다");
		}finally {
			
		}
		return null;
	}

	@Override
	public void update(Board board) throws ModifyException {
		// TODO Auto-generated method stub

	}

	@Override
	public void delete(int boardNo) throws RemoveException {
		// TODO Auto-generated method stub

	}

	@Override
	public void insert(Board board) throws AddException {
		// TODO Auto-generated method stub

	}
}
