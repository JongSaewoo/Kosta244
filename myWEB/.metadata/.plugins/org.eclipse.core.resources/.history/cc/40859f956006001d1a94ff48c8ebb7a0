package com.my.control;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.my.dto.Product;
import com.my.exception.FindException;
import com.my.repository.ProductOracleRepository;
import com.my.repository.ProductRepository;

public class ProductController implements Controller {

	@Override
	public String excute(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String list(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String servletPath = request.getServletPath();
		//프로퍼티즈를 새로만들던가 기존 프로퍼티즈안에 내용을 세분화하면됨
		if("/productlist".equals(servletPath)) { //로그인작업
			return list(request, response);
		} 
		return null;
//		ProductRepository repository = new ProductOracleRepository();
//		List<Product> products;
//		try {
//			products = repository.selectAll();
//		} catch (FindException e) {
//			e.printStackTrace();
//			products = new ArrayList<>();
//		}
//		
//		ObjectMapper mapper = new ObjectMapper();
//		Map<String, Object>map = new HashMap<>();
//		String result = null;
//		for(int i=0; i<products.size(); i++) {
//			
//			Product p = products.get(i);
//			
//			map.put("prod_no", p.getProdNo());
//			map.put("prod_name", p.getProdName());
//			map.put("prod_price", p.getProdPrice());
////			map.put("prod_info", p.getProdInfo());
////			map.put("prod_mfd", p.getProdMfd());
//		}
//		result = mapper.writeValueAsString(map); 
//		return result;
	}

	@Override
	public String view(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		return null;
	}

}
